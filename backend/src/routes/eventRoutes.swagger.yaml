openapi: 3.0.0
info:
  title: Events API
  version: 1.0.0
  description: API routes for managing events.

tags:
  - name: Events
    description: Routes related to event management

paths:
  /api/events/create:
    post:
      tags:
        - Events # Asigură-te că este corect indentat sub 'post'
      summary: Create a new event
      description: Allows an admin to create a new event. Requires admin role.
      security:
        - bearerAuth: [] # Requires authentication with JWT
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the event
                  example: "Music Concert"
                description:
                  type: string
                  description: A description of the event
                  example: "A live music concert featuring famous bands."
                date:
                  type: string
                  format: date
                  description: The date of the event
                  example: "2023-12-01"
                hall:
                  type: string
                  description: The hall where the event will take place
                  example: "Main Hall"
                tichetPrice:
                  type: number
                  description: The price of a ticket
                  example: 50
                poster:
                  type: string
                  format: binary
                  description: The event poster image file
      responses:
        "201":
          description: Event created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Event created successfully"
                  event:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the event
                        example: "Music Concert"
                      description:
                        type: string
                        description: A description of the event
                        example: "A live music concert featuring famous bands."
                      date:
                        type: string
                        description: The date of the event
                        example: "2023-12-01"
                      tichetPrice:
                        type: number
                        description: The price of a ticket
                        example: 50
                      hall:
                        type: string
                        description: The hall where the event will take place
                        example: "Main Hall"
                      poster:
                        type: string
                        description: The path to the processed event poster image
                        example: "/uploads/posters/event123.jpg"
        "400":
          description: Bad Request - Invalid input or no file selected
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No file selected!"
        "404":
          description: Not Found - Hall not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hall not found"
        "409":
          description: Conflict - Event name already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "The name of the event already exists"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error processing image"
  /api/events:
    get:
      tags:
        - Events
      summary: Get all events with filters and pagination
      description: Fetches all events with optional filters for price, date, hall, seats percentage, and search query. Supports pagination.
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            example: 1
        - name: price
          in: query
          description: Filter events by minimum ticket price
          required: false
          schema:
            type: number
            example: 50
        - name: date
          in: query
          description: Filter events by date range. Use the format "startDate|endDate".
          required: false
          schema:
            type: string
            example: "2023-12-01|2023-12-31"
        - name: hall
          in: query
          description: Filter events by hall name
          required: false
          schema:
            type: string
            example: "Main Hall"
        - name: seatsPercentage
          in: query
          description: Filter events by minimum percentage of seats filled
          required: false
          schema:
            type: number
            example: 50
        - name: search
          in: query
          description: Search events by name (case-insensitive)
          required: false
          schema:
            type: string
            example: "Music"
      responses:
        "200":
          description: OK - Events fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: The name of the event
                          example: "Music Concert"
                        description:
                          type: string
                          description: A description of the event
                          example: "A live music concert featuring famous bands."
                        date:
                          type: string
                          format: date
                          description: The date of the event
                          example: "2023-12-01"
                        tichetPrice:
                          type: number
                          description: The price of a ticket
                          example: 50
                        hall:
                          type: string
                          description: The hall where the event will take place
                          example: "Main Hall"
                  totalPages:
                    type: integer
                    description: Total number of pages based on the filters and pagination
                    example: 5
                  page:
                    type: integer
                    description: The current page number
                    example: 1
        "400":
          description: Bad Request - Error fetching events
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error fetching events"
  /api/events/{id}:
    get:
      tags:
        - Events
      summary: Get event by ID
      description: Fetch a single event by its ID, including details about the event and the hall.
      parameters:
        - name: id
          in: path
          description: The ID of the event to retrieve
          required: true
          schema:
            type: string
            example: "605c72b2f1a5b203d4a12345"
      responses:
        "200":
          description: OK - Event fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The name of the event
                    example: "Music Concert"
                  description:
                    type: string
                    description: A description of the event
                    example: "A live music concert featuring famous bands."
                  date:
                    type: string
                    description: The date of the event
                    example: "2023-12-01"
                  tichetPrice:
                    type: number
                    description: The price of a ticket
                    example: 50
                  hall:
                    type: string
                    description: The hall where the event will take place
                    example: "Main Hall"
                  poster:
                    type: string
                    description: The path to the event poster image
                    example: "/uploads/posters/event123.jpg"
        "404":
          description: Not Found - Event not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Event not found"
        "400":
          description: Bad Request - Error fetching event
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error fetching event"

    put:
      tags:
        - Events
      summary: Update event by ID
      description: Update details of an existing event. Requires admin role.
      security:
        - bearerAuth: [] # Requires authentication with JWT
      parameters:
        - name: id
          in: path
          description: The ID of the event to update
          required: true
          schema:
            type: string
            example: "605c72b2f1a5b203d4a12345"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the event
                  example: "Music Concert"
                description:
                  type: string
                  description: A description of the event
                  example: "A live music concert featuring famous bands."
                date:
                  type: string
                  format: date
                  description: The date of the event
                  example: "2023-12-01"
                location:
                  type: string
                  description: The location of the event
                  example: "Main Hall"
                seatsAvailable:
                  type: number
                  description: The number of available seats
                  example: 100
      responses:
        "200":
          description: OK - Event updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Event updated successfully"
                  event:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the event
                        example: "Music Concert"
                      description:
                        type: string
                        description: A description of the event
                        example: "A live music concert featuring famous bands."
                      date:
                        type: string
                        description: The date of the event
                        example: "2023-12-01"
                      location:
                        type: string
                        description: The location of the event
                        example: "Main Hall"
                      seatsAvailable:
                        type: number
                        description: The number of available seats
                        example: 100
        "404":
          description: Not Found - Event not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Event not found"
        "400":
          description: Bad Request - Error updating event
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error updating event"

    delete:
      tags:
        - Events
      summary: Delete event by ID
      description: Deletes an existing event by its ID. Requires admin role.
      security:
        - bearerAuth: [] # Requires authentication with JWT
      parameters:
        - name: id
          in: path
          description: The ID of the event to delete
          required: true
          schema:
            type: string
            example: "605c72b2f1a5b203d4a12345"
      responses:
        "200":
          description: OK - Event deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Event deleted successfully"
        "404":
          description: Not Found - Event not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Event not found"
        "400":
          description: Bad Request - Error deleting event
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error deleting event"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
