{"version":3,"file":"logger.js","sourceRoot":"/","sources":["config/logger.ts"],"names":[],"mappings":";;AAAA,qCAA2D;AAE3D,MAAM,MAAM,GAAG,IAAA,sBAAY,EAAC;IAC1B,KAAK,EAAE,MAAM;IACb,MAAM,EAAE,gBAAM,CAAC,OAAO,CAAC,gBAAM,CAAC,SAAS,EAAE,EAAE,gBAAM,CAAC,IAAI,EAAE,CAAC;IACzD,UAAU,EAAE;QACV,IAAI,oBAAU,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;QAC9D,IAAI,oBAAU,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,cAAc,EAAE,CAAC;KAClD;CACF,CAAC,CAAC;AAEH,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE,CAAC;IAC1C,MAAM,CAAC,GAAG,CACR,IAAI,oBAAU,CAAC,OAAO,CAAC;QACrB,MAAM,EAAE,gBAAM,CAAC,MAAM,EAAE;KACxB,CAAC,CACH,CAAC;AACJ,CAAC;AAED,kBAAe,MAAM,CAAC","sourcesContent":["import { createLogger, format, transports } from \"winston\";\r\n\r\nconst logger = createLogger({\r\n  level: \"info\",\r\n  format: format.combine(format.timestamp(), format.json()),\r\n  transports: [\r\n    new transports.File({ filename: \"error.log\", level: \"error\" }),\r\n    new transports.File({ filename: \"combined.log\" }),\r\n  ],\r\n});\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  logger.add(\r\n    new transports.Console({\r\n      format: format.simple(),\r\n    })\r\n  );\r\n}\r\n\r\nexport default logger;\r\n"]}