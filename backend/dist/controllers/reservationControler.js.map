{"version":3,"file":"reservationControler.js","sourceRoot":"/","sources":["controllers/reservationControler.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\nimport Reservation, {\r\n  Reservation as ReservationType\r\n} from \"../models/Reservation\";\r\nimport Hall, { Hall as HallType, Seat } from \"../models/Hall\";\r\nimport EventModel, { Event } from \"../models/Event\";\r\nimport { getAsync, setAsync, timeoutStorage } from \"../utils/redisUtils\";\r\nimport { AppError } from \"../middlewares/errorMiddleware\";\r\nimport { omit } from \"lodash\";\r\n\r\nexport const createReservation = async (\r\n  req: Request & {\r\n    user?: { id: string; username: string; password: string };\r\n    body: { eventId: string; seats: Seat[] };\r\n  },\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    if (\r\n      timeoutStorage.get(`restoreSeatsForUnpaidReservations-${req.user?.id}`)\r\n    ) {\r\n      return res.status(400).json({\r\n        message: \"You have an unpaid reservation in progress\"\r\n      });\r\n    }\r\n\r\n    if (!req.body.seats || req.body.seats.length === 0) {\r\n      return res.status(400).json({ message: \"No seats selected\" });\r\n    }\r\n\r\n    if (req.body.seats.length > 5) {\r\n      return res.status(400).json({ message: \"Max 5 seats per reservation\" });\r\n    }\r\n\r\n    const { eventId, seats } = req.body;\r\n    let eventModel: Event = (await EventModel.findById(eventId)) as Event;\r\n    const currentDate = new Date();\r\n\r\n    console.log(eventModel);\r\n    if (!eventModel) {\r\n      return res.status(400).json({ message: \"Invalid event\" });\r\n    }\r\n\r\n    if (currentDate > new Date(eventModel?.date)) {\r\n      return res.status(400).json({ message: \"Event has already passed\" });\r\n    }\r\n\r\n    if (!eventModel || !eventModel.seats) {\r\n      return res.status(404).json({ message: \"Event not found\" });\r\n    }\r\n\r\n    const unavailableSeats = (seats as HallType[\"seats\"]).filter((seat) => {\r\n      const hallSeat = eventModel.seats.find(\r\n        (hallSeat) =>\r\n          hallSeat.row === seat.row && hallSeat.number === seat.number\r\n      );\r\n      return hallSeat?.reservationOps.isReserved;\r\n    });\r\n\r\n    if (unavailableSeats.length > 0) {\r\n      return res.status(400).json({\r\n        message: \"Some seats are already reserved\",\r\n        unavailableSeats\r\n      });\r\n    }\r\n    console.log(eventModel.seats, \"eventModel.seats\", seats, \"seats\");\r\n\r\n    const hall = await Hall.findById(eventModel.hall);\r\n    if (!hall) {\r\n      return next(new AppError(\"Hall not found\", 404));\r\n    }\r\n\r\n    const reservation: ReservationType = new Reservation({\r\n      user: req?.user?.id,\r\n      event: eventModel._id,\r\n      hall: hall._id,\r\n      seats,\r\n      date: new Date(),\r\n      price: seats.length * eventModel.tichetPrice * 100,\r\n      eventDate: eventModel.date\r\n    });\r\n\r\n    eventModel.seats = [\r\n      ...eventModel.seats,\r\n      ...seats.map((seat: Seat) => ({\r\n        ...seat,\r\n        reservationOps: {\r\n          ...seat.reservationOps,\r\n          isReserved: true,\r\n          reservation: reservation._id\r\n        }\r\n      }))\r\n    ];\r\n\r\n    await eventModel.save();\r\n    await reservation.save();\r\n\r\n    const restoreSeatsForUnpaidReservations = setTimeout(async () => {\r\n      const eventModel: Event = (await EventModel.findById(eventId)) as Event;\r\n      const reservationModel: ReservationType | null =\r\n        await Reservation.findById(reservation._id);\r\n\r\n      if (!eventModel || !reservationModel) {\r\n        return;\r\n      }\r\n      console.log(\"a ajuns in timeout\");\r\n\r\n      const reservationWasPaid =\r\n        reservationModel.isPaid &&\r\n        seats.every(\r\n          (seat: Seat) =>\r\n            eventModel.seats.find(\r\n              (hallSeat) =>\r\n                hallSeat.row === seat.row &&\r\n                hallSeat.number === seat.number &&\r\n                hallSeat.reservationOps.isReserved &&\r\n                hallSeat.reservationOps.reservation ===\r\n                  reservationModel.id.toString()\r\n            ) !== undefined\r\n        );\r\n      console.log(reservationWasPaid, \"reservationWasPaid\");\r\n\r\n      if (!reservationWasPaid) {\r\n        eventModel.seats = eventModel.seats.filter((hallSeat) => {\r\n          return !seats.some((seat: Seat) => {\r\n            return hallSeat.row === seat.row && hallSeat.number === seat.number;\r\n          });\r\n        });\r\n        await eventModel.save();\r\n        await Reservation.findByIdAndDelete(reservation._id);\r\n      }\r\n      timeoutStorage.delete(\r\n        `restoreSeatsForUnpaidReservations-${reservation.user}`\r\n      );\r\n    }, 30000);\r\n\r\n    timeoutStorage.set(\r\n      `restoreSeatsForUnpaidReservations-${reservation.user}`,\r\n      restoreSeatsForUnpaidReservations\r\n    );\r\n\r\n    res.status(201).json({\r\n      message: \"Draft of reservation created successfully\",\r\n      reservation\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    next(new AppError(\"Error creating reservation\", 400));\r\n  }\r\n};\r\n\r\nexport const getAllReservations = async (\r\n  req: Request & { query: { page?: number }; user?: { id: string } },\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    const page: number = req.query.page ? +req.query.page : 1;\r\n    const skip: number = (page - 1) * 10;\r\n\r\n    let currentReservations = (await getAsync(\r\n      \"/api/reservations\"\r\n    )) as ReservationType[];\r\n    if (!currentReservations) {\r\n      currentReservations = await Reservation.find({ user: req.user?.id }).sort(\r\n        {\r\n          date: 1\r\n        }\r\n      );\r\n      await setAsync({\r\n        key: \"/api/reservations\",\r\n        value: currentReservations\r\n      });\r\n    }\r\n\r\n    const reservations = currentReservations;\r\n    const filteredReservations = reservations.slice(skip, skip + 10);\r\n\r\n    const totalPages = Math.ceil(reservations.length / 10);\r\n\r\n    return res.status(200).json({\r\n      reservations: filteredReservations,\r\n      totalPages,\r\n      page\r\n    });\r\n  } catch (error) {\r\n    next(new AppError(\"Error fetching reservations\", 400));\r\n  }\r\n};\r\n\r\nexport const getReservationById = async (\r\n  req: Request & { user?: { id: string; role: \"user\" | \"admin\" } },\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    const reservation = await Reservation.findById(req.params.id)\r\n      .populate(\"user\")\r\n      .populate(\"hall\", \"name\");\r\n    console.log(reservation, \"reservation\");\r\n    // if (reservation?.user !== req.user?.id || req.user?.role !== \"admin\") {\r\n    //   return res.status(403).json({ message: \"Forbidden access\" });\r\n    // }\r\n\r\n    if (!reservation) {\r\n      return res.status(404).json({ message: \"Reservation not found\" });\r\n    }\r\n    res.status(200).json(reservation);\r\n  } catch (error) {\r\n    next(new AppError(\"Error fetching reservation\", 400));\r\n  }\r\n};\r\n\r\nexport const deleteReservation = async (\r\n  req: Request & {\r\n    user?: {\r\n      id: string;\r\n      username: string;\r\n      password: string;\r\n      role: \"user\" | \"admin\";\r\n    };\r\n  },\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    const reservation = await Reservation.findById(req.params.id);\r\n    const isAdmin = req.user?.role === \"admin\";\r\n\r\n    if (!isAdmin && reservation?.user !== req.user?.id) {\r\n      return res.status(403).json({ message: \"Forbidden access\" });\r\n    }\r\n\r\n    if (!reservation) {\r\n      return res.status(404).json({ message: \"Reservation not found\" });\r\n    }\r\n    const eventModel = await EventModel.findById(reservation.event);\r\n\r\n    if (!eventModel) {\r\n      return res.status(404).json({ message: \"Event not found\" });\r\n    }\r\n\r\n    for (const seat of reservation.seats) {\r\n      const hallSeat = eventModel.seats.find(\r\n        (s) => s.row === seat.row && s.number === seat.number\r\n      );\r\n      if (hallSeat) {\r\n        hallSeat.reservationOps = {\r\n          isReserved: false,\r\n          reservation: null\r\n        };\r\n      }\r\n    }\r\n    await eventModel.save();\r\n    await Reservation.findByIdAndDelete(req.params.id);\r\n\r\n    const currentReservations = (await getAsync(\r\n      \"/api/reservations\"\r\n    )) as ReservationType[];\r\n    if (currentReservations) {\r\n      await setAsync({\r\n        key: \"/api/reservations\",\r\n        value: currentReservations?.filter(\r\n          (reservation: ReservationType) => reservation._id !== req.params.id\r\n        )\r\n      });\r\n    } else {\r\n      await setAsync({\r\n        key: \"/api/reservations\",\r\n        value: await Reservation.find()\r\n      });\r\n    }\r\n\r\n    const userReservations = (await getAsync(\r\n      `/api/reservations/user/${reservation.user}`\r\n    )) as ReservationType[];\r\n\r\n    if (userReservations) {\r\n      await setAsync({\r\n        key: `/api/reservations/user/${reservation.user}`,\r\n        value: userReservations?.filter(\r\n          (reservation: ReservationType) => reservation._id !== req.params.id\r\n        )\r\n      });\r\n    } else {\r\n      await setAsync({\r\n        key: `/api/reservations/user/${reservation.user}`,\r\n        value: await Reservation.find({ user: reservation.user })\r\n      });\r\n    }\r\n\r\n    res.status(200).json({ message: \"Reservation deleted successfully\" });\r\n  } catch (error) {\r\n    next(new AppError(\"Error deleting reservation\", 400));\r\n  }\r\n};\r\n\r\nexport const getUserReservations = async (\r\n  req: Request & {\r\n    user?: {\r\n      id: string;\r\n      username: string;\r\n      password: string;\r\n      role: \"user\" | \"admin\";\r\n    };\r\n  },\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    const isCurrentUser = req.user?.id === req.params.userId;\r\n    const isAdmin = req.user?.role === \"admin\";\r\n\r\n    if (!isCurrentUser && !isAdmin) {\r\n      return res.status(403).json({ message: \"Forbidden access\" });\r\n    }\r\n\r\n    const page: number = req.query.page ? +req.query.page : 1;\r\n    const limit: number = 10;\r\n    const skip: number = (page - 1) * limit;\r\n\r\n    const reservations = (await Reservation.find({\r\n      user: req.params.userId || req.user?.id\r\n    })\r\n      .populate(\"event\")\r\n      .populate(\"hall\")\r\n      .sort({\r\n        date: -1\r\n      })) as (ReservationType & {\r\n      event: Event;\r\n      hall: HallType;\r\n    })[];\r\n\r\n    if (!reservations) {\r\n      return res.status(404).json({ message: \"Reservations not found\" });\r\n    }\r\n\r\n    const totalPages = Math.ceil(reservations.length / limit);\r\n    const filteredReservations = reservations\r\n      .slice(skip, skip + limit)\r\n      .map((reservation) =>\r\n        omit(\r\n          {\r\n            eventName: reservation.event.name,\r\n            eventId: reservation.event._id,\r\n            hall: reservation.hall,\r\n            ...(reservation.toObject() as object)\r\n          },\r\n          [\"event\", \"hall\"]\r\n        )\r\n      );\r\n\r\n    res.status(200).json({\r\n      reservations: filteredReservations,\r\n      totalPages,\r\n      page\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    next(new AppError(\"Error fetching reservations\", 400));\r\n  }\r\n};\r\n\r\nexport const cancelPendingReservations = async (\r\n  req: Request & {\r\n    user?: {\r\n      id: string;\r\n      username: string;\r\n      password: string;\r\n      role: \"user\" | \"admin\";\r\n    };\r\n    body: {\r\n      reservationId: string;\r\n    };\r\n  },\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    const reservation = (await Reservation.findById(\r\n      req.params.id\r\n    )) as ReservationType;\r\n\r\n    if (!reservation) {\r\n      return res.status(404).json({ message: \"Reservations not found\" });\r\n    }\r\n\r\n    if (\r\n      reservation.user.toString() !== req.user?.id ||\r\n      req.user?.role !== \"admin\"\r\n    ) {\r\n      return res.status(403).json({ message: \"Forbidden access\" });\r\n    }\r\n\r\n    const restoreSeatsForUnpaidReservations = `restoreSeatsForUnpaidReservations-${reservation.user}`;\r\n\r\n    clearTimeout(timeoutStorage.get(restoreSeatsForUnpaidReservations));\r\n    timeoutStorage.delete(restoreSeatsForUnpaidReservations);\r\n\r\n    const eventModel = await EventModel.findById(reservation.event);\r\n    if (!eventModel) {\r\n      return res.status(404).json({ message: \"Event not found\" });\r\n    }\r\n\r\n    eventModel.seats = eventModel.seats.filter((hallSeat) => {\r\n      return !reservation.seats.some((seat) => {\r\n        return hallSeat.row === seat.row && hallSeat.number === seat.number;\r\n      });\r\n    });\r\n\r\n    await Reservation.findByIdAndDelete(req.params.id);\r\n    await eventModel.save();\r\n    let currentReservations = (await getAsync(\r\n      \"/api/reservations\"\r\n    )) as ReservationType[];\r\n    if (!currentReservations) {\r\n      currentReservations = await Reservation.find({ user: req.user?.id }).sort(\r\n        { date: -1 }\r\n      );\r\n      await setAsync({\r\n        key: \"/api/reservations\",\r\n        value: currentReservations.filter(\r\n          (reservation: ReservationType) => reservation._id !== req.params.id\r\n        )\r\n      });\r\n    }\r\n\r\n    return res.status(200).json({ message: \"Reservations canceled\" });\r\n  } catch (error) {\r\n    next(new AppError(\"Error canceling reservations\", 400));\r\n  }\r\n};\r\n"]}