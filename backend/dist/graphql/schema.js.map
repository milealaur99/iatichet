{"version":3,"file":"schema.js","sourceRoot":"/","sources":["graphql/schema.ts"],"names":[],"mappings":";;AAAA,iEAA4C;AAE5C,MAAM,QAAQ,GAAG,IAAA,2BAAG,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA0DnB,CAAC;AAEF,kBAAe,QAAQ,CAAC","sourcesContent":["import { gql } from \"apollo-server-express\";\r\n\r\nconst typeDefs = gql`\r\n  scalar Date\r\n\r\n  type Event {\r\n    id: ID!\r\n    name: String\r\n    description: String\r\n    date: Date\r\n    tichetPrice: Float\r\n    hall: Hall\r\n    seats: [Seat]\r\n  }\r\n\r\n  type Hall {\r\n    id: ID\r\n    name: String\r\n    description: String\r\n    seats: [Seat]\r\n  }\r\n\r\n  type Seat {\r\n    id: ID\r\n    row: String\r\n    number: Int\r\n    reservationOps: ReservationOps\r\n  }\r\n\r\n  type ReservationOps {\r\n    isReserved: Boolean\r\n    reservation: Reservation\r\n  }\r\n\r\n  type Reservation {\r\n    id: ID\r\n    user: User\r\n    event: Event\r\n    seat: Seat\r\n  }\r\n\r\n  type User {\r\n    id: ID\r\n    username: String\r\n    password: String\r\n    role: String\r\n  }\r\n\r\n  type Query {\r\n    events: [Event]\r\n    event(id: ID!): Event\r\n    halls: [Hall]\r\n    hall(id: ID!): Hall\r\n    seats: [Seat]\r\n    seat(id: ID!): Seat\r\n    reservations: [Reservation]\r\n    reservation(id: ID!): Reservation\r\n    users: [User]\r\n    user(id: ID!): User\r\n  }\r\n`;\r\n\r\nexport default typeDefs;\r\n"]}