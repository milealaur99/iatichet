{"version":3,"file":"eventRoutes.test.js","sourceRoot":"/","sources":["src/routes/eventRoutes.test.ts"],"names":[],"mappings":"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","sourcesContent":["import request from \"supertest\";\r\nimport { app, server } from \"../../index\";\r\nimport { MongoMemoryServer } from \"mongodb-memory-server\";\r\nimport EventModel from \"../models/Event\";\r\nimport HallModel from \"../models/Hall\";\r\nimport {\r\n  createMongoServer,\r\n  createUserAndLogin,\r\n  getCsrfTokenAndCookie\r\n} from \"../utils/jestMocks\";\r\nimport path from \"path\";\r\n\r\njest.setTimeout(1000000000);\r\n\r\nconst filePath = path.join(\r\n  __dirname,\r\n  \"..\",\r\n  \"..\",\r\n  \"assets\",\r\n  \"default_transparent_765x625.png\"\r\n);\r\n\r\njest.mock(\"../config/redis\", () => {\r\n  const actualRedis = jest.requireActual(\"redis-mock\");\r\n  const client = actualRedis.createClient();\r\n\r\n  client.connect = jest.fn();\r\n\r\n  return {\r\n    client\r\n  };\r\n});\r\n\r\njest.mock(\"../utils/redisUtils\", () => {\r\n  const timeoutStorage = new Map();\r\n  const usersViewingEvent = new Map();\r\n\r\n  return {\r\n    timeoutStorage,\r\n    usersViewingEvent,\r\n    getAsync: jest.fn((key) => Promise.resolve(null)),\r\n    setAsync: jest.fn((key, value) => Promise.resolve(\"OK\"))\r\n  };\r\n});\r\n\r\nlet mongoData: {\r\n  mongoServer: MongoMemoryServer;\r\n  disconnectServer: () => Promise<void>;\r\n};\r\n\r\nbeforeAll(async () => {\r\n  mongoData = await createMongoServer();\r\n});\r\n\r\nafterAll(async () => {\r\n  server.close();\r\n  await mongoData.disconnectServer();\r\n  jest.clearAllMocks();\r\n});\r\n\r\ndescribe(\"Event Routes\", () => {\r\n  beforeEach(async () => {\r\n    await EventModel.deleteMany({});\r\n    await HallModel.deleteMany({});\r\n  });\r\n\r\n  const createSeats = (numSeats: number) => {\r\n    return Array.from({ length: numSeats }, (_, i) => ({\r\n      row: String.fromCharCode(65 + Math.floor(i / 10)),\r\n      number: (i % 10) + 1,\r\n      reservationOps: { isReserved: false, reservation: null }\r\n    }));\r\n  };\r\n\r\n  describe(\"POST /api/events/create\", () => {\r\n    it(\"should create an event successfully with valid data\", async () => {\r\n      const hall = new HallModel({\r\n        name: \"Main Hall\",\r\n        type: \"large\",\r\n        seats: createSeats(200)\r\n      });\r\n      await hall.save();\r\n\r\n      const { token, csrfToken, cookie } = await createUserAndLogin({\r\n        username: \"adminUser\",\r\n        email: \"admin@example.com\",\r\n        password: \"password123\",\r\n        role: \"admin\",\r\n        app\r\n      });\r\n\r\n      const response = await request(app)\r\n        .post(\"/api/events/create\")\r\n        .set(\"Authorization\", `Bearer ${token}`)\r\n        .set(\"XSRF-TOKEN\", csrfToken)\r\n        .set(\"Cookie\", cookie)\r\n        .field(\"name\", \"Music Concert\")\r\n        .field(\"description\", \"A great concert\")\r\n        .field(\"date\", new Date().toISOString())\r\n        .field(\"hall\", hall.name)\r\n        .field(\"tichetPrice\", \"50\")\r\n        .attach(\"poster\", filePath)\r\n        .expect(201);\r\n\r\n      expect(response.body.message).toBe(\"Event created successfully\");\r\n      expect(response.body.event).toHaveProperty(\"name\", \"Music Concert\");\r\n    });\r\n\r\n    it(\"should return 409 if event with the same name already exists\", async () => {\r\n      const hall = new HallModel({\r\n        name: \"Main Hall\",\r\n        type: \"large\",\r\n        seats: createSeats(200)\r\n      });\r\n      await hall.save();\r\n\r\n      const existingEvent = new EventModel({\r\n        name: \"Music Concert\",\r\n        description: \"A great concert\",\r\n        date: new Date(),\r\n        hall: hall._id,\r\n        tichetPrice: 50\r\n      });\r\n      await existingEvent.save();\r\n\r\n      const { token, csrfToken, cookie } = await createUserAndLogin({\r\n        username: \"adminUser\",\r\n        email: \"admin@example.com\",\r\n        password: \"password123\",\r\n        role: \"admin\",\r\n        app\r\n      });\r\n\r\n      const response = await request(app)\r\n        .post(\"/api/events/create\")\r\n        .set(\"Authorization\", `Bearer ${token}`)\r\n        .set(\"XSRF-TOKEN\", csrfToken)\r\n        .set(\"Cookie\", cookie)\r\n        .field(\"name\", \"Music Concert\")\r\n        .field(\"description\", \"A different concert\")\r\n        .field(\"date\", new Date().toISOString())\r\n        .field(\"hall\", hall.name)\r\n        .field(\"tichetPrice\", \"50\")\r\n        .attach(\"poster\", filePath)\r\n        .expect(409);\r\n\r\n      expect(response.body.message).toBe(\r\n        \"The name of the event already exists\"\r\n      );\r\n    });\r\n  });\r\n\r\n  describe(\"GET /api/events\", () => {\r\n    it(\"should return a list of events\", async () => {\r\n      const { csrfToken, cookie } = await getCsrfTokenAndCookie(app);\r\n\r\n      const hall = new HallModel({\r\n        name: \"Main Hall\",\r\n        type: \"large\",\r\n        seats: createSeats(200)\r\n      });\r\n      await hall.save();\r\n\r\n      const event1 = new EventModel({\r\n        name: \"Music Concert\",\r\n        description: \"A great concert\",\r\n        date: new Date(),\r\n        hall: hall._id,\r\n        tichetPrice: 50\r\n      });\r\n      await event1.save();\r\n\r\n      const event2 = new EventModel({\r\n        name: \"Art Exhibition\",\r\n        description: \"A fine art display\",\r\n        date: new Date(),\r\n        hall: hall._id,\r\n        tichetPrice: 30\r\n      });\r\n      await event2.save();\r\n\r\n      const response = await request(app)\r\n        .get(\"/api/events/\")\r\n        .set(\"XSRF-TOKEN\", csrfToken)\r\n        .set(\"Cookie\", cookie)\r\n        .expect(200);\r\n\r\n      expect(response.body.events).toHaveLength(2);\r\n      expect(response.body.events[0]).toHaveProperty(\"name\", \"Music Concert\");\r\n      expect(response.body.events[1]).toHaveProperty(\"name\", \"Art Exhibition\");\r\n    });\r\n  });\r\n\r\n  describe(\"GET /api/events/:id\", () => {\r\n    it(\"should return event details by id\", async () => {\r\n      const hall = new HallModel({\r\n        name: \"Main Hall\",\r\n        type: \"large\",\r\n        seats: createSeats(200)\r\n      });\r\n      await hall.save();\r\n\r\n      const event = new EventModel({\r\n        name: \"Music Concert\",\r\n        description: \"A great concert\",\r\n        date: new Date(),\r\n        hall: hall._id,\r\n        tichetPrice: 50\r\n      });\r\n      await event.save();\r\n\r\n      const response = await request(app)\r\n        .get(`/api/events/${event._id}`)\r\n        .expect(200);\r\n\r\n      expect(response.body).toHaveProperty(\"name\", \"Music Concert\");\r\n      expect(response.body).toHaveProperty(\"description\", \"A great concert\");\r\n    });\r\n\r\n    it(\"should return 404 if event not found\", async () => {\r\n      const response = await request(app)\r\n        .get(\"/api/events/424242424242424242424242\")\r\n        .expect(404);\r\n\r\n      expect(response.body.message).toBe(\"Event not found\");\r\n    });\r\n  });\r\n\r\n  describe(\"DELETE /api/events/:id\", () => {\r\n    it(\"should delete an event successfully\", async () => {\r\n      const hall = new HallModel({\r\n        name: \"Main Hall\",\r\n        type: \"large\",\r\n        seats: createSeats(200)\r\n      });\r\n      await hall.save();\r\n\r\n      const event = new EventModel({\r\n        name: \"Music Concert\",\r\n        description: \"A great concert\",\r\n        date: new Date(),\r\n        hall: hall._id,\r\n        tichetPrice: 50\r\n      });\r\n      await event.save();\r\n\r\n      const { token, csrfToken, cookie } = await createUserAndLogin({\r\n        username: \"adminUser\",\r\n        email: \"admin@example.com\",\r\n        password: \"password123\",\r\n        role: \"admin\",\r\n        app\r\n      });\r\n\r\n      const response = await request(app)\r\n        .delete(`/api/events/${event._id}`)\r\n        .set(\"Authorization\", `Bearer ${token}`)\r\n        .set(\"XSRF-TOKEN\", csrfToken)\r\n        .set(\"Cookie\", cookie)\r\n        .expect(200);\r\n\r\n      expect(response.body.message).toBe(\"Event deleted successfully\");\r\n\r\n      const deletedEvent = await EventModel.findById(event._id);\r\n      expect(deletedEvent).toBeNull();\r\n    });\r\n\r\n    it(\"should return 404 if event not found\", async () => {\r\n      const { token, csrfToken, cookie } = await createUserAndLogin({\r\n        username: \"adminUser\",\r\n        email: \"admin@example.com\",\r\n        password: \"password123\",\r\n        role: \"admin\",\r\n        app\r\n      });\r\n\r\n      const response = await request(app)\r\n        .delete(\"/api/events/424242424242424242424242\")\r\n        .set(\"Authorization\", `Bearer ${token}`)\r\n        .set(\"XSRF-TOKEN\", csrfToken)\r\n        .set(\"Cookie\", cookie)\r\n        .expect(404);\r\n\r\n      expect(response.body.message).toBe(\"Event not found\");\r\n    });\r\n  });\r\n});\r\n"]}