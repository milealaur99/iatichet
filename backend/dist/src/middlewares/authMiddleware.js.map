{"version":3,"file":"authMiddleware.js","sourceRoot":"/","sources":["src/middlewares/authMiddleware.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,sCAA8C;AAC9C,uDAA6C;AAC7C,sCAAkD;AAE3C,MAAM,cAAc,GAAG,CAC5B,GAMC,EACD,GAAoB,EACpB,IAAkB,EAClB,EAAE;;IACF,MAAM,KAAK,GAAG,CAAA,MAAA,GAAG,CAAC,OAAO,0CAAE,GAAG,KAAI,IAAA,wBAAkB,EAAC,GAAU,CAAC,CAAC;IAEjE,IAAI,CAAC,KAAK,IAAI,GAAG,EAAE,CAAC;QAClB,OAAO,GAAG;aACP,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,EAAE,OAAO,EAAE,mCAAmC,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,IAAI,CAAC;QACH,IAAI,IAAA,YAAM,EAAC,KAAK,CAAC,EAAE,CAAC;YAClB,MAAM,OAAO,GAAG,IAAA,YAAM,EAAC,KAAK,CAAC,CAAC;YAC9B,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC;YAC3B,IAAI,EAAE,CAAC;QACT,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,0BAAQ,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC,CAAC;IAC3C,CAAC;AACH,CAAC,CAAA,CAAC;AA5BW,QAAA,cAAc,kBA4BzB","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\nimport { decode, verify } from \"../utils/jwt\";\r\nimport { AppError } from \"./errorMiddleware\";\r\nimport { getTokenFromHeader } from \"../utils/jwt\";\r\n\r\nexport const authMiddleware = async (\r\n  req: Request & {\r\n    user?: {\r\n      username: string;\r\n      id: string;\r\n      password: string;\r\n    };\r\n  },\r\n  res: Response | null,\r\n  next: NextFunction\r\n) => {\r\n  const token = req.cookies?.jwt || getTokenFromHeader(req as any);\r\n\r\n  if (!token && res) {\r\n    return res\r\n      .status(401)\r\n      .json({ message: \"Access denied. No token provided.\" });\r\n  }\r\n\r\n  try {\r\n    if (verify(token)) {\r\n      const decoded = decode(token);\r\n      req.user = decoded.payload;\r\n      next();\r\n    }\r\n  } catch (error) {\r\n    next(new AppError(\"Invalid token\", 400));\r\n  }\r\n};\r\n"]}