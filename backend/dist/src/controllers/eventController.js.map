{"version":3,"file":"eventController.js","sourceRoot":"/","sources":["src/controllers/eventController.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\r\nimport Event, { Event as EventType } from \"../models/Event\";\r\nimport Hall, { Hall as HallType, Seat } from \"../models/Hall\";\r\nimport mongoose from \"mongoose\";\r\nimport { AppError } from \"../middlewares/errorMiddleware\";\r\nimport { upload } from \"../middlewares/uploadImageMiddleware\";\r\nimport { fork } from \"child_process\";\r\nimport path from \"path\";\r\n\r\nexport const createEvent = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  upload(req, res, async (err) => {\r\n    if (err) {\r\n      return next(new AppError(err.message, 400));\r\n    }\r\n\r\n    if (!req.file) {\r\n      return res.status(400).json({ message: \"No file selected!\" });\r\n    }\r\n\r\n    try {\r\n      const { name, description, date, hall, tichetPrice } = req.body;\r\n      const hallModel = await Hall.findOne({ name: hall });\r\n\r\n      if (!hallModel) {\r\n        return res.status(404).json({ message: \"Hall not found\" });\r\n      }\r\n\r\n      const eventAlreadyExists = await Event.findOne({ name });\r\n\r\n      if (eventAlreadyExists) {\r\n        return res\r\n          .status(409)\r\n          .json({ message: \"The name of the event already exists\" });\r\n      }\r\n      const child = fork(\r\n        path.join(__dirname, \"..\", \"..\", \"src\", \"utils\", \"imageProcessor.js\")\r\n      );\r\n\r\n      child.send(req.file.path);\r\n\r\n      child.on(\"message\", async (message: { processedPath: string }) => {\r\n        const { processedPath } = message;\r\n\r\n        const event = new Event({\r\n          name,\r\n          description,\r\n          date,\r\n          tichetPrice,\r\n          hall: hallModel._id,\r\n          seats: [],\r\n          poster: processedPath\r\n        });\r\n\r\n        await event.save();\r\n\r\n        res.status(201).json({\r\n          message: \"Event created successfully\",\r\n          event: { ...event.toObject(), hall: hallModel.name }\r\n        });\r\n      });\r\n\r\n      child.on(\"error\", (error) => {\r\n        next(new AppError(\"Error processing image\", 500));\r\n      });\r\n    } catch (error) {\r\n      next(new AppError(\"Error creating event\", 400));\r\n    }\r\n  });\r\n};\r\n\r\nexport const getAllEvents = async (\r\n  req: Request & {\r\n    query?: {\r\n      page?: number;\r\n      price?: number;\r\n      date?: string;\r\n      hall?: string;\r\n      seatsPercentage?: number;\r\n    };\r\n  },\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    const {\r\n      price,\r\n      date,\r\n      hall,\r\n      seatsPercentage,\r\n      search\r\n    }: {\r\n      price?: number;\r\n      date?: string;\r\n      hall?: string;\r\n      seatsPercentage?: number;\r\n      search?: string;\r\n    } = req.query;\r\n\r\n    const page: number = req.query.page ? +req.query.page : 1;\r\n    const skip: number = (page - 1) * 10;\r\n\r\n    const [startDate, endDate] = (date || \"\").split(\"|\") as [string, string];\r\n    const parsedStartDate = startDate\r\n      ? new Date(+startDate).getTime()\r\n      : new Date().setHours(0, 0, 0, 0);\r\n    const parsedEndDate = endDate ? new Date(+endDate).getTime() : undefined;\r\n\r\n    const hallId = hall ? (await Hall.findOne({ name: hall }))?._id : null;\r\n\r\n    const query: Object = {\r\n      ...(startDate && endDate\r\n        ? {\r\n            date: {\r\n              $gte: parsedStartDate,\r\n              $lte: parsedEndDate\r\n            }\r\n          }\r\n        : { date: { $gte: new Date().setHours(0, 0, 0, 0) } }),\r\n      ...(price ? { tichetPrice: { $lte: Number(price) } } : {}),\r\n      ...(search ? { name: { $regex: new RegExp(search, \"i\") } } : {}),\r\n      ...(hall ? { hall: hallId } : {})\r\n    };\r\n\r\n    let currentEvents = await Event.find(query).populate(\"hall\").exec();\r\n\r\n    if (seatsPercentage !== undefined) {\r\n      currentEvents = currentEvents.filter(async (event: EventType) => {\r\n        const totalSeats = event.seats.length;\r\n        const eventHall = await Hall.find(event.hall);\r\n        const hallSeats = eventHall[0].seats;\r\n\r\n        const availableSeats = hallSeats.filter(\r\n          (seat: Seat) => !seat.reservationOps.isReserved\r\n        ).length;\r\n        const calculatedSeatsPercentage = (availableSeats / totalSeats) * 100;\r\n\r\n        return calculatedSeatsPercentage >= seatsPercentage;\r\n      });\r\n    }\r\n\r\n    const totalEvents = currentEvents.length;\r\n    currentEvents = currentEvents.slice(skip, skip + 10);\r\n\r\n    const eventsWithHall = currentEvents.map((event: EventType) => ({\r\n      ...event.toObject(),\r\n      hall: (event.hall as unknown as EventType)?.name || \"\"\r\n    }));\r\n\r\n    if (eventsWithHall.length === 0) {\r\n      return res.status(200).json({\r\n        events: [],\r\n        totalPages: 0,\r\n        page: 1\r\n      });\r\n    }\r\n\r\n    const totalPages = Math.ceil(totalEvents / 10);\r\n\r\n    return res.status(200).json({\r\n      events: eventsWithHall,\r\n      totalPages,\r\n      page\r\n    });\r\n  } catch (error) {\r\n    next(new AppError(\"Error fetching events\", 400));\r\n  }\r\n};\r\n\r\nexport const getEventById = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    const eventModel = await Event.findById(req.params.id).populate(\"hall\");\r\n    if (!eventModel) {\r\n      return res.status(404).json({ message: \"Event not found\" });\r\n    }\r\n    res.status(200).json({\r\n      ...eventModel.toObject(),\r\n      hall: (eventModel.hall as any)?.name || \"\"\r\n    });\r\n  } catch (error) {\r\n    next(new AppError(\"Error fetching event\", 400));\r\n  }\r\n};\r\n\r\nexport const deleteEvent = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    const event = await Event.findByIdAndDelete(req.params.id);\r\n    if (!event) {\r\n      return res.status(404).json({ message: \"Event not found\" });\r\n    }\r\n\r\n    res.status(200).json({ message: \"Event deleted successfully\" });\r\n  } catch (error) {\r\n    next(new AppError(\"Error deleting event\", 400));\r\n  }\r\n};\r\n"]}