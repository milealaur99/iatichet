{"version":3,"file":"paymentController.js","sourceRoot":"/","sources":["src/controllers/paymentController.ts"],"names":[],"mappings":"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","sourcesContent":["import path from \"path\";\r\nimport ReservationModel, { Reservation } from \"../models/Reservation\";\r\nimport Event, { Event as EventType } from \"../models/Event\";\r\nimport { generateReservationPDF } from \"../utils/pdfGenerator\";\r\nimport { timeoutStorage, getAsync, setAsync } from \"../utils/redisUtils\";\r\nimport { Request, Response } from \"express\";\r\nimport Stripe from \"stripe\";\r\n\r\nexport const createCheckoutSession = async (req: Request, res: Response) => {\r\n  try {\r\n    const { reservation } = req.body as { reservation: Reservation };\r\n    const stripe = new Stripe(process.env.STRIPE_SECRET_KEY as string);\r\n\r\n    if (!stripe) {\r\n      return res.status(500).json({ message: \"Stripe not initialized\" });\r\n    }\r\n    const successUrl = `${req.protocol}://${req.get(\r\n      \"host\"\r\n    )}/api/payment/success?reservationId=${reservation._id}`;\r\n    const cancelUrl = `${req.protocol}://${req.get(\r\n      \"host\"\r\n    )}/api/payment/cancel?reservationId=${reservation._id}`;\r\n    const event = await Event.findById(reservation.event);\r\n\r\n    if (!event) {\r\n      return res.status(404).json({ message: \"Event not found\" });\r\n    }\r\n\r\n    const session = await stripe.checkout.sessions.create({\r\n      payment_method_types: [\"card\"],\r\n      line_items: [\r\n        {\r\n          price_data: {\r\n            currency: \"RON\",\r\n            product_data: {\r\n              name: event.name\r\n            },\r\n            unit_amount: event.tichetPrice * 100\r\n          },\r\n          quantity: reservation.seats.length\r\n        }\r\n      ],\r\n      mode: \"payment\",\r\n      success_url: successUrl,\r\n      cancel_url: cancelUrl,\r\n      expires_at: Math.floor(Date.now() / 1000) + 1800\r\n    });\r\n\r\n    const reservationModel: Reservation | null =\r\n      await ReservationModel.findById(reservation._id);\r\n    if (!reservationModel || !session.url) {\r\n      return res.status(404).json({ message: \"Reservation not found\" });\r\n    }\r\n\r\n    reservationModel.paymentLink = session.url;\r\n\r\n    await reservationModel.save();\r\n\r\n    res.json({ id: session.id, url: session.url });\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Internal server error\" });\r\n  }\r\n};\r\n\r\nexport const success = async (\r\n  req: Request & {\r\n    user?: { id: string; username: string; password: string };\r\n    body: {\r\n      reservation: Reservation;\r\n    };\r\n  },\r\n  res: Response\r\n) => {\r\n  try {\r\n    const { reservationId } = req.query;\r\n\r\n    const reservation: Reservation | null = await ReservationModel.findById(\r\n      reservationId\r\n    );\r\n\r\n    if (!reservation) {\r\n      return res.status(404).json({ message: \"Reservation not found\" });\r\n    }\r\n\r\n    const pdfPath = path.join(\r\n      __dirname,\r\n      \"..\",\r\n      \"..\",\r\n      \"pdfs\",\r\n      `${(reservation._id as string).toString()}.pdf`\r\n    );\r\n    const eventModel: EventType | null = await Event.findById(\r\n      reservation.event\r\n    );\r\n    const seats = reservation.seats;\r\n\r\n    if (!eventModel || !seats) {\r\n      return res.status(404).json({ message: \"Event not found\" });\r\n    }\r\n\r\n    for (const seat of seats) {\r\n      const hallSeat = {\r\n        reservationOps: {\r\n          isReserved: true,\r\n          reservation: (reservation._id as string).toString()\r\n        },\r\n        row: seat.row,\r\n        number: seat.number,\r\n        reservation: (reservation._id as string).toString()\r\n      };\r\n\r\n      eventModel.seats.push(hallSeat);\r\n    }\r\n\r\n    reservation.isPaid = true;\r\n\r\n    await eventModel.save();\r\n    await reservation.save();\r\n\r\n    const restoreSeatsForUnpaidReservations = `restoreSeatsForUnpaidReservations-${reservation.user.toString()}`;\r\n\r\n    clearTimeout(timeoutStorage.get(restoreSeatsForUnpaidReservations));\r\n    timeoutStorage.delete(restoreSeatsForUnpaidReservations);\r\n\r\n    const currentReservations = (await getAsync(\r\n      \"/api/reservations\"\r\n    )) as Reservation[];\r\n\r\n    if (currentReservations) {\r\n      await setAsync({\r\n        key: \"/api/reservations\",\r\n        value: [...currentReservations, reservation]\r\n      });\r\n    } else {\r\n      await setAsync({\r\n        key: \"/api/reservations\",\r\n        value: await ReservationModel.find()\r\n      });\r\n    }\r\n\r\n    const userReservations = (await getAsync(\r\n      `/api/reservations/${reservation.user.toString()}`\r\n    )) as Reservation[];\r\n\r\n    if (userReservations) {\r\n      await setAsync({\r\n        key: `/api/reservations/${reservation.user.toString()}`,\r\n        value: [...userReservations, reservation]\r\n      });\r\n    } else {\r\n      await setAsync({\r\n        key: `/api/reservations/${reservation.user.toString()}`,\r\n        value: await ReservationModel.find({\r\n          user: reservation.user.toString()\r\n        })\r\n      });\r\n    }\r\n\r\n    const currentEvent = (await getAsync(\r\n      `/api/events/${reservation.event.toString()}`\r\n    )) as EventType;\r\n\r\n    await setAsync({\r\n      key: `/api/events/${reservation.event.toString()}`,\r\n      value: { ...currentEvent, seats: eventModel.seats }\r\n    });\r\n\r\n    await generateReservationPDF(reservation, pdfPath);\r\n\r\n    res.redirect(\r\n      `http://localhost:3000/success/${reservation._id}?eventId=${reservation.event}`\r\n    );\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Internal server error\" });\r\n  }\r\n};\r\n\r\nexport const cancel = async (\r\n  req: Request & {\r\n    user?: { id: string; username: string; password: string };\r\n    body: {\r\n      reservation: Reservation;\r\n    };\r\n  },\r\n  res: Response\r\n) => {\r\n  const { reservationId } = req.query;\r\n\r\n  const reservation: Reservation | null = await ReservationModel.findById(\r\n    reservationId\r\n  );\r\n\r\n  if (!reservation) {\r\n    return res.status(404).json({ message: \"Reservation not found\" });\r\n  }\r\n\r\n  const currentReservations = (await getAsync(\r\n    \"/api/reservations\"\r\n  )) as Reservation[];\r\n\r\n  if (currentReservations) {\r\n    const updatedReservations = currentReservations.filter(\r\n      (r) => r.id !== reservationId\r\n    );\r\n    await setAsync({ key: \"/api/reservations\", value: updatedReservations });\r\n  }\r\n\r\n  const userReservations = (await getAsync(\r\n    `/api/reservations/${reservation.user.toString()}`\r\n  )) as Reservation[];\r\n\r\n  if (userReservations) {\r\n    const updatedUserReservations = userReservations.filter(\r\n      (r) => r.id !== reservationId\r\n    );\r\n    await setAsync({\r\n      key: `/api/reservations/${reservation.user.toString()}`,\r\n      value: updatedUserReservations\r\n    });\r\n  }\r\n\r\n  const event = await Event.findById(reservation.event);\r\n  if (!event) {\r\n    return res.status(404).json({ message: \"Event not found\" });\r\n  }\r\n\r\n  for (const seat of reservation.seats) {\r\n    const hallSeat = event.seats.find(\r\n      (s) => s.row === seat.row && s.number === seat.number\r\n    );\r\n    if (hallSeat) {\r\n      hallSeat.reservationOps = {\r\n        isReserved: false,\r\n        reservation: \"\"\r\n      };\r\n    }\r\n  }\r\n  await event.save();\r\n  await ReservationModel.findByIdAndDelete(reservationId);\r\n\r\n  const restoreSeatsForUnpaidReservations = `restoreSeatsForUnpaidReservations-${reservation.user.toString()}`;\r\n\r\n  clearTimeout(timeoutStorage.get(restoreSeatsForUnpaidReservations));\r\n  timeoutStorage.delete(restoreSeatsForUnpaidReservations);\r\n\r\n  await setAsync({\r\n    key: `/api/events/${reservation.event}`,\r\n    value: event\r\n  });\r\n\r\n  res.redirect(\r\n    `http://localhost:3000/cancel/${reservation._id}?eventId=${reservation.event}`\r\n  );\r\n};\r\n\r\nexport const downloadPDFReservation = async (\r\n  req: Request & {\r\n    user?: { id: string; username: string; password: string };\r\n    body: {\r\n      reservation: Reservation;\r\n    };\r\n  },\r\n  res: Response\r\n) => {\r\n  try {\r\n    const { reservationId } = req.query;\r\n\r\n    const reservation: Reservation | null = await ReservationModel.findById(\r\n      reservationId\r\n    );\r\n\r\n    if (!reservation) {\r\n      return res.status(404).json({ message: \"Reservation not found\" });\r\n    }\r\n    const pdfPath = path.join(\r\n      __dirname,\r\n      \"..\",\r\n      \"..\",\r\n      \"pdfs\",\r\n      `${reservation._id}.pdf`\r\n    );\r\n\r\n    res.download(pdfPath, `${reservation._id}.pdf`);\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"File not found\" });\r\n  }\r\n};\r\n"]}