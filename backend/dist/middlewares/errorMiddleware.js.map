{"version":3,"file":"errorMiddleware.js","sourceRoot":"/","sources":["middlewares/errorMiddleware.ts"],"names":[],"mappings":";;;;;;AACA,8DAAsC;AAEtC,MAAa,QAAS,SAAQ,KAAK;IAKjC,YAAY,OAAe,EAAE,UAAkB;QAC7C,KAAK,CAAC,OAAO,CAAC,CAAC;QAEf,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,GAAG,UAAU,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;QACjE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC;CACF;AAdD,4BAcC;AAEM,MAAM,YAAY,GAAG,CAC1B,GAAa,EACb,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;IACF,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC;IACvC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,IAAI,OAAO,CAAC;IAEnC,gBAAM,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,UAAU,MAAM,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;IAEnD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;QAC9B,MAAM,EAAE,GAAG,CAAC,MAAM;QAClB,OAAO,EAAE,GAAG,CAAC,OAAO;KACrB,CAAC,CAAC;AACL,CAAC,CAAC;AAfW,QAAA,YAAY,gBAevB","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\nimport logger from \"../config/logger\";\r\n\r\nexport class AppError extends Error {\r\n  statusCode: number;\r\n  status: string;\r\n  isOperational: boolean;\r\n\r\n  constructor(message: string, statusCode: number) {\r\n    super(message);\r\n\r\n    this.statusCode = statusCode;\r\n    this.status = `${statusCode}`.startsWith(\"4\") ? \"fail\" : \"error\";\r\n    this.isOperational = true;\r\n\r\n    Error.captureStackTrace(this, this.constructor);\r\n  }\r\n}\r\n\r\nexport const errorHandler = (\r\n  err: AppError,\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  err.statusCode = err.statusCode || 500;\r\n  err.status = err.status || \"error\";\r\n\r\n  logger.error(`${err.statusCode} - ${err.message}`);\r\n\r\n  res.status(err.statusCode).json({\r\n    status: err.status,\r\n    message: err.message,\r\n  });\r\n};\r\n"]}