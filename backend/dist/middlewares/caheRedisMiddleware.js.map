{"version":3,"file":"caheRedisMiddleware.js","sourceRoot":"/","sources":["middlewares/caheRedisMiddleware.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,uDAA6C;AAC7C,oDAAyD;AAUlD,MAAM,eAAe,GAAG,CAC7B,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;IACF,MAAM,GAAG,GAAG,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,GAAG,CAAC;IACvC,IAAI,CAAC;QACH,MAAM,UAAU,GAAG,MAAM,IAAA,qBAAQ,EAAC,GAAG,CAAC,CAAC;QACvC,IAAI,UAAU,EAAE,CAAC;YACf,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACvB,CAAC;aAAM,CAAC;YACN,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC;YAC5B,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,EAAE,EAAE;gBAClB,IAAA,qBAAQ,EAAC,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC/B,MAAM,QAAQ,GAAG,GAAG,CAAC,YAAY,IAAI,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBAC5D,OAAO,QAAQ,aAAR,QAAQ,cAAR,QAAQ,GAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpC,CAAC,CAAC;YACF,IAAI,EAAE,CAAC;QACT,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,0BAAQ,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC,CAAC;IAChD,CAAC;AACH,CAAC,CAAA,CAAC;AAtBW,QAAA,eAAe,mBAsB1B","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\nimport { AppError } from \"./errorMiddleware\";\r\nimport { setAsync, getAsync } from \"../utils/redisUtils\";\r\n\r\ndeclare global {\r\n  namespace Express {\r\n    interface Response {\r\n      sendResponse?: (body: Object) => void;\r\n    }\r\n  }\r\n}\r\n\r\nexport const cacheMiddleware = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  const key = req.originalUrl || req.url;\r\n  try {\r\n    const cachedData = await getAsync(key);\r\n    if (cachedData) {\r\n      res.send(cachedData);\r\n    } else {\r\n      res.sendResponse = res.send;\r\n      res.send = (body) => {\r\n        setAsync({ key, value: body });\r\n        const response = res.sendResponse && res.sendResponse(body);\r\n        return response ?? res.send(body);\r\n      };\r\n      next();\r\n    }\r\n  } catch (error) {\r\n    next(new AppError(\"Error caching data\", 500));\r\n  }\r\n};\r\n"]}