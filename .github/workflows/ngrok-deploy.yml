name: Deploy Backend and Frontend

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Install Docker Compose
      - name: Install Docker Compose
        run: sudo apt-get install -y docker-compose

      # Step 3: Download and Install Ngrok
      - name: Download and Install Ngrok
        run: |
          wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
          unzip ngrok-stable-linux-amd64.zip
          sudo mv ngrok /usr/local/bin/
          ngrok authtoken ${{ secrets.NGROK_AUTHTOKEN }}

      # Step 4: Run Docker Compose to start the backend
      - name: Run Docker Compose
        run: docker-compose up -d

      # Step 5: Wait for Backend to Start
      - name: Wait for Backend to Start
        run: sleep 10

      # Step 6: Fetch Ngrok URL and log it
      - name: Fetch Ngrok URL
        run: |
          NGROK_URL=$(curl --silent http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "Fetched Ngrok URL: $NGROK_URL"
          echo "NGROK_URL=${NGROK_URL}" >> $GITHUB_ENV
          if [ -z "$NGROK_URL" ]; then
            echo "Error: Ngrok URL is empty. Please check Ngrok setup." 
            exit 1
          fi

      # Step 7: Update Env Var in Frontend's .env file
      - name: Update Env Var in Frontend
        run: |
          echo "REACT_APP_BACKEND_URL=${NGROK_URL}" > ./frontend/event-management/.env
          echo "Updated REACT_APP_BACKEND_URL in .env to $NGROK_URL"
          cat ./frontend/event-management/.env

      # Step 8: Update environment variable on Render.com
      - name: Update Env Var on Render.com
        run: |
          echo "Updating Render.com environment variable with Ngrok URL: $NGROK_URL"
          curl -X PUT \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"value": "'$NGROK_URL'"}' \
            https://api.render.com/v1/env-groups/${{ secrets.ENV_GROUP_ID }}/env-vars/${{ secrets.ENV_VAR_KEY }}
          if [ $? -ne 0 ]; then
            echo "Error updating environment variable on Render.com"
            exit 1
          fi

      # Step 9: Trigger deployment on Render.com
      - name: Trigger Deployment on Render.com
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"clearCache": "do_not_clear"}' \
            https://api.render.com/v1/services/${{ secrets.SERVICE_ID }}/deploys
          if [ $? -ne 0 ]; then
            echo "Error triggering deployment on Render.com"
            exit 1
          fi
