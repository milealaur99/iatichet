name: Deploy Backend and Frontend

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Backend Dependencies
        run: |
          cd backend
          npm install

      - name: Run Docker Compose with Health Check
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: "./docker-compose.yml"
          services: backend
          up-flags: "--build"

      - name: Wait for Backend to be Ready
        run: |
          echo "Waiting for backend to be ready..."
          RETRIES=70
          while [ $RETRIES -gt 0 ]; do
            STATUS=$(curl -s http://localhost:5000/health || echo "not_ready")
            if [[ "$STATUS" == *"healthy"* ]]; then
              echo "Backend is ready!"
              break
            else
              echo "Backend not ready yet. Retrying..."
              RETRIES=$((RETRIES-1))
              sleep 10
            fi
          done

          if [ $RETRIES -eq 0 ]; then
            echo "Error: Backend did not become ready in time."
            exit 1
          fi

      - name: Expose Backend with Ngrok
        uses: codetalkio/expose-tunnel@v1.5.0
        with:
          service: bore.pub
          port: 5000
        id: expose-tunnel

      - name: Set NGROK_URL
        run: echo "NGROK_URL=${{ steps.expose-tunnel.outputs.tunnel-url }}" >> $GITHUB_ENV

      - name: Update Env Var in Frontend's .env file
        run: |
          echo "REACT_APP_BACKEND_URL=${NGROK_URL}" > ./frontend/event-management/.env
          echo "Updated REACT_APP_BACKEND_URL in .env to $NGROK_URL"
          cat ./frontend/event-management/.env

      - name: Update Env Var on Render.com
        run: |
          echo "Updating Render.com environment variable with Ngrok URL: $NGROK_URL"
          curl -X PUT \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"value": "'$NGROK_URL'"}' \
            https://api.render.com/v1/env-groups/${{ secrets.ENV_GROUP_ID }}/env-vars/${{ secrets.ENV_VAR_KEY }}

      - name: Trigger Deployment on Render.com
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"clearCache": "do_not_clear"}' \
            https://api.render.com/v1/services/${{ secrets.SERVICE_ID }}/deploys

      - name: Capture Backend Logs
        run: docker-compose logs backend > backend_logs.txt

      - name: Upload Backend Logs
        uses: actions/upload-artifact@v3
        with:
          name: backend-logs
          path: backend_logs.txt
